// Copyright 15-Sep-2019 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

/// Recursive tests

(
  // "start" print

  (dup (dup 1 - sum +) if)
  sum =>
  // "Recursive not tail function" print
  6 sum 21 == assert

  (
    (dup (n =; n +, n 1 - : sum1) ( pop) elif)
    sum1 =>
    0 swap sum1
  ) sum =>
  // "Recursive tail function" print
  6 sum 21 == assert

  ( (dup 1 > (n =; r =; r n +, n 1 -) (pop; break) elif)
    sum1 =>
    n =; 1 n sum1:& loop
  ) sum =>
  // "Recursive tail function to loop" print
  6 sum 21 == assert

  (1 + it,range0 R =; 0 R (+) it,each) sum =>
  // "Range" print
  6 sum 21 == assert

  (n =; 0 n 1 + (i =; i +) for) sum =>
  // "for" print
  6  sum 21 == assert

  ( 1 swap
    ( dup 1 > (n =; n +; n 1 -) (pop; break) elif) loop
  ) sum =>
  // "loop" print
  6  sum 21 == assert

  ( 1 swap
    (dup 1 >) (n =; n +; n 1 -) while
    pop
  ) sum =>
  // "while" print
  6  sum 21 == assert
) run

empty? assert
