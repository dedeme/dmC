// Copyright 19-Sept-2019 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

(
  // new - from
  0 blob,new B0 =
  B0 blob,size 0 == assert
  3 blob,new blob,size 3 == assert
  [1] blob,from B1 =
  B1 blob,to [1] == assert
  [1, 2, 3] blob,from B2 =
  B2 blob,to [1, 2, 3] == assert

  // make - fill

  1 0 blob,make blob,to () expect
  112 1 blob,make blob,to (112) expect
  1 3 blob,make blob,to (1, 1, 1) expect
  0 blob,new dup 1 blob,fill blob,to () expect
  112 1 blob,make dup 222 blob,fill blob,to (222) expect
  1 3 blob,make dup 4 blob,fill blob,to (4, 4, 4) expect

  // copy - get - set - set+ - up - up+
  B1 blob,copy B1c =
  B2 blob,copy B2c =
  B1 0 blob,get 1 == assert
  B1 0 100 blob,set+; 0 blob,get 100 == assert
  B1c 0 blob,get 1 == assert
  B2 1 200 blob,set+; 2 203 blob,set
  B2 1 blob,get 200 == assert
  B2 2 blob,get 203 == assert
  B2c 1 blob,get 2 == assert
  B2c 2 blob,get 3 == assert;
  B2 1 (33 +) blob,up+; 2 (33 -) blob,up
  B2 1 blob,get 233 == assert
  B2 2 blob,get 170 == assert


  // == - !=
  B0 B0 blob,== assert
  B0 B0 == assert
  B0 B0 blob,copy != assert
  B0 B0 blob,copy blob,== assert
  B1 B1 == assert
  B1 B1 blob,copy != assert
  B1 B1 blob,== assert
  B1 B1 blob,copy blob,== assert
  B1 B1c blob,!= assert
  B2 B2 == assert
  B2 B2 blob,copy != assert
  B2 B2 blob,== assert
  B2 B2 blob,copy blob,== assert
  B2 B2c blob,!= assert
  B1c B2c blob,!= assert

  // sub - left - right

  [1, 2] blob,from 1 blob,left R = [1] R blob,to == assert
  R [2] blob,from blob,+ -2 -1 blob,sub R = [1] R blob,to == assert
  R [2] blob,from blob,+ 0 0 blob,sub R = [] R blob,to == assert
  R [1, 2] blob,from blob,+ -1 0 blob,sub R = [] R blob,to == assert
  R [1, 2] blob,from blob,+ 2 2 blob,sub R = [] R blob,to == assert
  R [1, 2] blob,from blob,+ 0 2 blob,sub R = [1, 2] R blob,to == assert
  R 1 2 blob,sub R = [2] R blob,to == assert
  R 1 blob,right R = [] R blob,to == assert
  R [1, 2] blob,from blob,+ 0 blob,right R = [1, 2] R blob,to == assert
  R -1 blob,right R = [2] R blob,to == assert
  [] blob,from 0 blob,left  blob,to [] == assert
  [1, 2, 33] blob,from 0 blob,left blob,to [] == assert
  [1, 2, 33] blob,from 1 blob,left blob,to [1] == assert
  [1, 2, 33] blob,from 3 blob,left blob,to [1, 2, 33] == assert
  [] blob,from 0 blob,right blob,to [] == assert
  [1, 2, 33] blob,from 0 blob,right blob,to [1, 2, 33] == assert
  [1, 2, 33] blob,from 1 blob,right blob,to [2, 33] == assert
  [1, 2, 33] blob,from 3 blob,right blob,to [] == assert

  // copy + ++

  [] blob,from blob,copy blob,to [] expect
  [1] blob,from blob,copy blob,to [1] expect
  [1, 2, 3] blob,from blob,copy blob,to [1, 2, 3] expect
  [] blob,from [] blob,from blob,+ blob,to [] expect
  [1] blob,from [] blob,from blob,+ blob,to [1] expect
  [] blob,from [1] blob,from blob,+ blob,to [1] expect
  [1, 2] blob,from [3, 4] blob,from blob,+ blob,to [1, 2, 3, 4] expect
  ([] blob,from [] blob,from) blob,++ blob,to [] expect
  ([1] blob,from [] blob,from) blob,++ blob,to [1] expect
  ([] blob,from [1] blob,from) blob,++ blob,to [1] expect
  ([1, 2] blob,from [3] blob,from [4, 5] blob,from) blob,++ blob,to
    [1, 2, 3, 4, 5] expect

  // fromJs - toJs

  [] blob,from blob,toJs "\"\"" == assert
  [34] blob,from blob,toJs "\"Ig==\"" == assert
  [12, 32, 255] blob,from blob,toJs "\"DCD/\"" == assert

  [] blob,from blob,toJs blob,fromJs blob,to [] == assert
  [34] blob,from blob,toJs blob,fromJs blob,to [34] == assert
  [12, 32, 255] blob,from blob,toJs blob,fromJs blob,to [12, 32, 255] == assert

  empty? assert
) run
