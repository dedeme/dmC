// Copyright 14-Oct-2019 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

/*
( s2 =; s1 =
  s1 size dup : len1 =; 1 - : len1-1 =
  s2 size dup : len2 =; 1 - : len2-1 =

  s1 : 0 : len1-1 0 < (0) (len1-1) elif : str,sub : s1Sub =
  s2 : 0 : len2-1 0 < (0) (len2-1) elif : str,sub : s2Sub =

  (s1 "" == : s2 "" == : ||)
  ("")
  else
  (s1 len1-1 str,get : s2 len2-1 str,get : ==)
  (s1Sub s2Sub lcs : s1 len1-1 str,get +)
  else
  (
    s1 s2Sub lcs : r1 =
    s1Sub s2 lcs : r2 =
    r1 size : r2 size : > (r1) (r2) elif
  )
  if
) lcs =>
*/

( s2 =; s1 =
  s1 str,len : len1 =
  s2 str,len : len2 =
  "" len2 1 + lst,make : wrap,ref PriorRow =

  len1
  ( i =
    [""] data : Row =

    len2
    ( j =
      PriorRow >> : PRow =

      s1 i str,get : s2 j str,get : ==
      ( Row :: PRow j lst,get : s1 i str,get : + :: lst,push)
      (
        Row j lst,get : subs1 =
        PRow : j 1 + : lst,get : subs2 =

        subs1 str,len : subs2 str,len : >
        ( Row subs1 lst,push)
        ( Row subs2 lst,push)
        elif
      )
      elif
    )
    for
    PriorRow Row <<
  )
  for
  PriorRow >> len2 lst,get
) lcs =>

( s2 =; s1 =
  "lcs(" s1 + ", " + s2 + ") = " + s1 s2 lcs js,ws + sys,println
) print =>

clock,now C1 =
"1234" "1224533324" print
"thisisatest" "testing123testing" print
"" "x" print
"x" "x" print
"beginning-middle-ending" "beginning-diddle-dum-ending" print
"rosettacode" "raisethysword" print
clock,now C1 clock,df toStr " Millisecs." + puts

empty? assert
