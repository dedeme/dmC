import "sub";

A = [0];

try A! = 1;
catch (e) A! = 2;
sys.test(A!, 1);

A! = 0;
try {
  A! = 1;
  throw "here";
} catch (e) {
  A! = 2;
}
sys.test(A!, 2);

/*
A! = 0;
try {
  A! = 1;
  {
    throw "here";
  }
} catch (e) {
  A! = 2;
  throw e;
}
sys.test(A!, 2);
*/

A! = 0;
try A! = 1;
catch (e) A! = 2;
finally A! = 3;
sys.test(A!, 3);

A! = 0;
try {
  A! = 1;
  throw "here";
} catch (e) {
  A! = 2;
} finally A! = 3;
sys.test(A!, 3);

/*
A! = 0;
try {
  A! = 1;
  {
    throw "here";
  }
} catch (e) {
  A! = 2;
  throw e;
} finally sys.println("finally");
sys.test(A!, 2);
*/

fn1 = \-> {
  try return 1;
  catch (e) return 2;
};
sys.test(fn1(), 1);

fn2 = \-> {
  try throw "here";
  catch (e) return 2;
};
sys.test(fn2(), 2);

/*
fn3 = \-> {
  try throw("here");
  catch (e) throw("here2");
};
sys.test(fn3(), 2);
*/

fn4 = \-> {
  try return 1;
  catch (e) return 2;
  finally return 3;
};
sys.test(fn4(), 3);

fn5 = \-> {
  try throw ("here");
  catch (e) return 2;
  finally return 4;
};
sys.test(fn5(), 4);

fnV = [0];
fn6 = \-> {
  try return 1;
  catch (e) return 2;
  finally fnV! = 5;
};
sys.test(fn6(), 1);
sys.test(fnV!, 5);

fnV! = 0;
fn7 = \-> {
  try throw ("here");
  catch (e) return 2;
  finally fnV! = 5;
};
sys.test(fn7(), 2);
sys.test(fnV!, 5);

Sum = [0];
C1 = [0];
while () {
  Sum! += C1!;
  C1! += 1;
  if (C1! >= 5) break;
  continue;
}
sys.test(Sum!, 10);

Sum! = 0;
C1! = 0;
while () {
  Sum! += C1!;
  C1! += 1;
  if (C1! < 5) continue;
  break;
}
sys.test(Sum!, 10);

fnw1 = \ -> {
  C = [0];
  while () {
    if (C! == 4) return C!;
    C! += 1;
  }
  return -4;
};
sys.test(fnw1(), 4);

Sum! = 0;
C1! = 0;
while (C1! < 5) {
  Sum! += C1!;
  C1! += 1;
}
sys.test(Sum!, 10);

Sum! = 0;
C1! = 0;
while (C1! < 25) {
  Sum! += C1!;
  C1! += 1;
}
sys.test(Sum!, 300);

Sum! = 0;
C1! = 0;
while (C1! < 25) {
  Sum! += C1!;
  C1! += 1;
  if (C1! >= 5) break;
}
sys.test(Sum!, 10);

Sum! = 0;
C1! = 0;
while ([1]) {
  Sum! += C1!;
  C1! += 1;
  if (C1! < 5) continue;
  break;
}
sys.test(Sum!, 10);

Sum! = 0;
C1! = 0;
while (!![]) {
  Sum! += C1!;
  C1! += 1;
  if (C1! < 5) continue;
  break;
}
sys.test(Sum!, 0);

Sum! = 0;
C1! = 0;
while ("a") {
  Sum! += C1!;
  C1! += 1;
  if (C1! < 5) continue;
  break;
}
sys.test(Sum!, 10);

Sum! = 0;
C1! = 0;
while ("") {
  Sum! += C1!;
  C1! += 1;
  if (C1! < 5) continue;
  break;
}
sys.test(Sum!, 0);

fnw2 = \ -> {
  C = [0];
  while (C! < 4) C! += 1;
  return C!;
};
sys.test(fnw1(), 4);

fnw3 = \ -> {
  C = [0];
  while ("1") {
    if (C! == 4) return C!;
    C! += 1;
  }
  return -4;
};
sys.test(fnw1(), 4);

C = [23];
if (!![]) C! = 0;
else C! = 1;
sys.test(C!, 1);

C! = 23;
if ([1, 4]) C! = 1;
else C! = 0;
sys.test(C!, 1);

C! = 23;
if ("") C! = 0;
else C! = 1;
sys.test(C!, 1);

C! = 23;
if ("") throw ("fail");
else C! = 1;
sys.test(C!, 1);

C! = 23;
if ("  ") {
  C! = 1;
} else {
  throw ("fail");
}
sys.test(C!, 1);

fni1 = \a, b -> if (a > b) return "up"; else return "down";;
sys.test(fni1(3, 2), "up");
sys.test(fni1("a", "z"), "down");

fni2 = \a, b -> {
  if (a > b) {
    return "up";
  } else if (a == b) {
    return "eq";
  } else {
    return "down";
  }
};
sys.test(fni2(3.5, 2.03), "up");
sys.test(fni2("a", "z"), "down");
sys.test(fni2(1, 1), "eq");

A0 = [];
A1 = [1];
A3 = [1, 2, 3];

Sum! = 0;
for (e = A0) Sum! += e;
sys.test(Sum!, 0);

Sum! = 0;
for (e = A1) {
  Sum! += e;
}
sys.test(Sum!, 1);

Sum! = 0;
for (e = A3) {
  Sum! += e;
}
sys.test(Sum!, 6);

Sum! = 0;
for (e = A3) {
  Sum! += e;
  if (e == 2) break;
}
sys.test(Sum!, 3);

Sum! = 0;
for (e = A3) {
  Sum! += e;
  if (e < 2) continue;
  break;
}
sys.test(Sum!, 3);

fnf1 = \-> {
  Sum = [0];
  for (e = A3) {
    Sum! += e;
    if (e < 2) continue;
    return Sum!;
  }
  return 0;
};
sys.test(fnf1(), 3);

fnf3 = \-> {
  Sum = [0];
  for (e = [1 : 4]) {
    Sum! += e;
    if (e < 2) continue;
    return Sum!;
  }
  return 0;
};
sys.test(fnf3(), 3);

Sum! = 0;
for (i = [5 : 4]) Sum! += i;
sys.test(Sum!, 0);

Sum! = 0;
for (i = [4 : 4]) Sum! += i;
sys.test(Sum!, 0);

Sum! = 0;
for (i = [1 : 3 : 1]) Sum! += i;
sys.test(Sum!, 6);

Sum! = 0;
for (e = [1 : 3 : 1]) {
  Sum! += e;
  if (e == 2) break;
}
sys.test(Sum!, 3);

fnf4 = \-> {
  Sum = [0];
  for (e = [1 : 3 : 1]) {
    Sum! += e;
    if (e < 2) continue;
    return Sum!;
  }
  return 0;
};
sys.test(fnf4(), 3);

Sum! = 0;
for (i = [4 : 20 : -2]) Sum! += i;
sys.test(Sum!, 0);

Sum! = 0;
for (i = [4 : 1 : -2]) Sum! += i;
sys.test(Sum!, 6);

Sum! = 0;
for (e = [4 : 1 : -2]) {
  Sum! += e;
  if (e == 2) break;
}
sys.test(Sum!, 6);

fnf5 = \-> {
  Sum = [0];
  for (e = [4 : 1 : -2]) {
    Sum! += e;
    if (e > 2) continue;
    return Sum!;
  }
  return 0;
};
sys.test(fnf5(), 6);

Str = [""];
for (e = "") Str! += e;
sys.test(Str!, "");

Str! = "";
for (e = "abc") Str! += e;
sys.test(Str!, "abc");

Str! = "";
for (e = "abc") {
  Str! += e;
  if (e == "b") break;
}
sys.test(Str!, "ab");

fnf6 = \-> {
  Str! = "";
  for (e = "abc") {
    Str! += e;
    if (e < "b") continue;
    return Str!;
  }
  return "";
};
sys.test(fnf6(), "ab");

Sum! = "";
for (i = {}) Sum! += i;
sys.test(Sum!, "");

Sum! = "";
for (k, v = {"a": 1, "b": 2, "c": 3}) Sum! += k;
sys.test(Sum!, "abc");

Sum! = "";
for (e, v = {"a": 1, "b": 2, "c": 3}) {
  Sum! += e;
  if (e == "b") break;
}
sys.test(Sum!, "ab");

Sum! = 0;
Str! = "";
Dic = {"a": 1, "b": 2, "c": 3};
for (k, e = Dic) {
  Sum! += e;
  Str! += k;
  if (e < 2) continue;
  break;
}
sys.test(Sum!, 3);
sys.test(Str!, "ab");

fnf7 = \-> {
  Sum = [""];
  for (e, v = {"a": 1, "b": 2, "c": 3}) {
    Sum! += e;
    if (e < "b") continue;
    return Sum!;
  }
  return 0;
};
sys.test(fnf7(), "ab");

Sum! = 0;
for (i = 5 : 4) Sum! += i;
sys.test(Sum!, 0);

Sum! = 0;
for (i = 1 : 4) Sum! += i;
sys.test(Sum!, 6);

Sum! = 0;
for (e = 1 : 4) {
  Sum! += e;
  if (e == 2) break;
}
sys.test(Sum!, 3);

fnf8 = \-> {
  Sum = [0];
  for (e = 1 : 4) {
    Sum! += e;
    if (e < 2) continue;
    return Sum!;
  }
  return 0;
};
sys.test(fnf8(), 3);

Sum! = 0;
for (i = 5 : 4) Sum! += i;
sys.test(Sum!, 0);

Sum! = 0;
for (i = 4 : 4) Sum! += i;
sys.test(Sum!, 0);

Sum! = 0;
for (i = 1 : 3 : 1) Sum! += i;
sys.test(Sum!, 6);

Sum! = 0;
for (e = 1 : 3 : 1) {
  Sum! += e;
  if (e == 2) break;
}
sys.test(Sum!, 3);

fnf9 = \-> {
  Sum = [0];
  for (e = [1 : 3 : 1]) {
    Sum! += e;
    if (e < 2) continue;
    return Sum!;
  }
  return 0;
};
sys.test(fnf9(), 3);

Sum! = 0;
for (i = 4 : 20 : -2) Sum! += i;
sys.test(Sum!, 0);

Sum! = 0;
for (i = 4 : 1 : -2) Sum! += i;
sys.test(Sum!, 6);

Sum! = 0;
for (e = 4 : 1 : -2) {
  Sum! += e;
  if (e == 2) break;
}
sys.test(Sum!, 6);

fnf10 = \-> {
  Sum = [0];
  for (e = 4 : 1 : -2) {
    Sum! += e;
    if (e > 2) continue;
    return Sum!;
  }
  return 0;
};
sys.test(fnf10(), 6);

Str! = "";
switch (3 + 2) {
  3 : Str! = "3";
}
sys.test(Str!, "");

Str! = "";
switch (3 + 2) {
  3 : {
    Str! = "3";
  }
  default : {
    Str! = "df";
  }
}
sys.test(Str!, "df");

Str! = "";
switch (3 + 2) {
  3       : throw ("error");
  30 / 6  : Str! = "5";
  default : throw ("fail");
}
sys.test(Str!, "5");

Str! = "";
switch (3 + 2) {
  3           : throw ("error");
  20, 30 / 6  : Str! = "5";
  default     : throw ("fail");
}
sys.test(Str!, "5");

Str! = "";
switch (3 + 2) {
  3           : throw ("error");
  30 / 6, 20  : Str! = "5";
  default     : throw ("fail");
}
sys.test(Str!, "5");

fn = \n -> do "return n|0;";;
sys.test(fn(4), 4);

fn22 = \n -> {

  do

  """

  let m = n * 2;
  m += 1;

  return m;

  """
  ;
};
sys.test(fn22(4), 9);

fn33 = \n, m -> {
  return 33;
};
sys.test(fn33(4, 6), 33);

:sub ixx = sub.mk("a", \-> return 33;, \n1, n2 -> return n1 + n2;);

sys.test(ixx[sub.ixx1], "a");
sys.test(ixx[sub.fnixx2](), 33);

v
  =
    ixx.
  ixx1;
sys.test(v, "a");

vfnA = ixx.fn();
sys.test(vfnA, 33);

vfnB = ixx.fnixx2#();
sys.test(vfnB, 33);

vfn2A = ixx.fn2(3, 2);
sys.test(vfn2A, 5);

vfn2B = ixx.fnixx3#(12, 2);
sys.test(vfn2B, 14);

fnTyped = \:sub o, n1, n2 -> return o.fnixx3#(n1, n2);;
sys.test(fnTyped(ixx, 4, 5), 9);

fnTyped2 = \n1, n2, :sub o -> return o.fn2(n1, n2);;
sys.test(fnTyped2(4, 5, ixx), 9);

ATyped = [ixx, sub.mk("b", \-> return 33;, \n1, n2 -> return 2;)];
addV = [""];
for (:sub v = ATyped) {
  addV! += v.ixx1;
}
sys.test(addV!, "ab");
addV! = "";
for (i, :sub v = ATyped) {
  addV! += i + v.ixx1;
}
sys.test(addV!, "0a1b");

DTyped = {"A": ixx, "B": sub.mk("b", \-> return 33;, \n1, n2 -> return 2;)};
addV! = "";
for (k, :sub v = DTyped) {
  addV! += k + v.ixx1;
}
sys.test(addV!, "AaBb");

sys.test(sub.one, 1);
sys.test(sub.two, 2);

sys.test(sub.sone, "1");
sys.test(sub.stwo, "2");

sys.test(sub.one2, 0);
sys.test(sub.two2, 1);

sys.test(sub.sone2, "sone2");
sys.test(sub.stwo2, "stwo2");

:sub s1, :sub s2 = [
  sub.mk(11, \-> return 33;, \n1, n2 -> return n1 + n2;),
  sub.mk(22, \-> return 33;, \n1, n2 -> return n1 + n2;)
];
sys.test(s1.ixx1, 11);

, dica : {"dicb": 1, dica: 2, dicc: 3};
sys.test(dica, 2);

,,,,, dica2 : {"dicb": 1, dica2: 2, dicc: 3};
sys.test(dica2, 2);

dicb, dicc : {"dicb": 1, dica: 2, dicc: 3};
sys.test(dicb + dicc, 4);

, arra = [1, 2, 3];
sys.test(arra, 2);

arrb,,arrc = [1, 2, 3];
sys.test(arrb + arrc, 4);

trace "End statement tests ok at line 675";
