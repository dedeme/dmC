// Copyright 16-Aug-2024 ºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

fn = \(|) -> {
  sys.test(sys.toStr(true), "true");
  sys.test(sys.toStr(false), "false");

  sys.test(sys.toStr(0), "0");
  sys.test(sys.toStr(1_234), "1234");
  sys.test(sys.toStr(0564), "564");

  sys.test(sys.toStr(1.2300), "1.23");
  sys.test(sys.toStr(1_586.235e2), "158623.5");
  sys.test(sys.toStr(0.0), "0");
  sys.test(sys.toStr(0.012), "0.012");

  sys.test(sys.toStr(""), "");
  sys.test(sys.toStr("abc"), "abc");

  sys.test(sys.toStr([]), "[]");
  sys.test(sys.toStr(["a" ]), "[\"a\"]");
  sys.test(sys.toStr([ 1 , 2, 3 ]), "[1,2,3]");

  sys.test(sys.toStr({}), "{}");
  sys.test(sys.toStr({"a": "1"}), '{"a":"1"}');
  sys.test(
    sys.toStr({"a": "1", "b": "2", "c": "3"}),
    '{"a":"1","b":"2","c":"3"}'
  );

  sys.test({"a": "1", "b": "2"}.a, "1");
  //sys.test({"a": "1", "b": "2"}.ax, "1");

  sys.test("ab"[1], "b");
  sys.test("aros"[3],"s");
  sys.test("años"[3], "o");

  sys.test({"a": "1", "b": "2"}["a"], "1");
  //sys.test({"a": "1", "b": "2"}["ax"], "1");

  sys.test("abc"[:], "abc");
  sys.test("abc"[:2], "ab");
  sys.test("abc"[2:], "c");
  sys.test("abc"[1:2], "b");
  sys.test("abc"[:-1], "ab");
  sys.test("abc"[-1:], "c");

  sys.test([1, 2, 3][:], [1, 2, 3]);
  sys.test([1, 2, 3][:2], [1, 2]);
  sys.test([1, 2, 3][2:], [3]);
  sys.test([1, 2, 3][1:2], [2]);
  sys.test([1, 2, 3][:-1], [1, 2]);
  sys.test([1, 2, 3][-1:], [3]);


  //sys.test(math.maxInt(), 9223372036854775807);
  //sys.test(math.pow(3.0, 2.0), 9.0);

  sys.test(
    switch([1, 2, 3][1]) {
      1 : 1/0;
      2 : 12;
      3 : 3/0;
      default: 4/0;
    }, 12
  );

  sys.test(
    switch([1, 2, 3][1]) {
      1 : "one";
      3 : "three";
      default: "none";
    }, "none"
  );
  sys.test(
    switch([1, 2, 3][1]) {
      1, 2 : "one";
      3 : "three";
      default: "none";
    }, "one"
  );

  sys.test(
    switch([1, 2, 3][1]) {
      1 : 1/0;
      2, 15 : 2;
      3 : 3;
      default: 1/0;
    }, 2
  );
  sys.test(
    switch([1, 2, 3][1]) {
      1 : 1/0;
      15, 2, 33 : 2;
      3 : 3;
      default: 1/0;
    }, 2
  );

  sys.test(!true, false);
  sys.test(!false, true);
  sys.test(![1, 2], false);
  sys.test(![], true);

  sys.test(-3, -3);
  sys.test(--3, 3);
  sys.test(-0.0, 0.0);
  sys.test(--3.45, 3.45);

  sys.test(2 + 3, 5);
  sys.test(2.1 + 3.6, 5.7);
  sys.test("a" + "bc", "abc");
  sys.test("" + "bc", "bc");
  sys.test("bc" + "", "bc");
  sys.test([1] + [2, 3], [1, 2, 3]);
  sys.test([] + ["2", "3"], ["2", "3"]);
  sys.test(["2", "3"] + [], ["2", "3"]);

  sys.test(2 - -2, 4);
  sys.test(2 * -2, -4);
  sys.test(3 / -2, -1);
  sys.test(2.0 - -2.0, 4.0);
  sys.test(2.0 * -2.0, -4.0);
  sys.test(3.0 / -2.0, -1.5);

  sys.test(15 % 7, 1);

  sys.test(true & false, false);
  sys.test(true | 4 == 1/0, true);
  sys.test(3 == 0 & 3 == 1/0, false);
  sys.test(3 == 3 & 3 == 1, false);
  sys.test(3 == 3 & 1 == 1, true);
  sys.test(3 != 0 | 3 == 1/0, true);
  sys.test(3 == 0 | 3 != 1, true);
  sys.test(3 == 0 | 3 == 1, false);
  sys.test(3 == 3 | 1 == 1, true);

  sys.test("ab"[0] == "a" ? 1 : 2, 1);

  sys.test(4 - 2 - 2, 0);
  sys.test(4 - (2 - 2), 4);
  sys.test(4 + 3 * 2, 10);
  sys.test((4 + 3) * 2, 14);
  sys.test((4 + -3) * 2, 2);
  sys.test(3 + 2 > 3 + 1, true);
  sys.test(3 + 2 > 3 + 1
    ?  2 < 4
      ? 12
      : 16
    :33, 12);
  sys.test(3 + 2 < 3 + 1
    ?  2 < 4
      ? 12
      : 16
    :33, 33);
  sys.test(3 + 2 < 3 + 1 ? 1/0 : 16, 16);
  sys.test(3 + 2 > 3 + 1 ? 2 == 4 + 12 : true,  false);
  sys.test(3 + 2 > 3 + 1 ? 12 : 1/0, 12);

  sys.assert(true == true);
  sys.assert(true != false);

  sys.assert(34 == 34);
  sys.assert(34 != 35);
  sys.assert(34 != -34);
  sys.assert(0 == -0);

  sys.assert(12.5 == 12.5);
  sys.assert(12.6 != 12.5);
  sys.assert(12.5 != -12.5);
  sys.assert(0.0 == -0.0);

  sys.assert(5 > 4);
  sys.assert(5 >= 4);
  sys.assert(4 >= 2 + 2);
  sys.assert(-4 < 4);
  sys.assert(-4 <= 4);
  sys.assert(-4 <= -4);

  sys.assert("" == "");
  sys.assert("" != "abc");
  sys.assert("abc" == "abc");
  sys.assert("abc" != "a");
  sys.assert("abc" != "bbc");

  sys.assert("a" > "");
  sys.assert("a" >= "");
  sys.assert("a" >= "a");
  sys.assert("ab" < "b");
  sys.assert("ab" <= "b");
  sys.assert("ab" <= "ab");

  sys.assert([] == []);
  sys.assert([] != ["1", "2"]);
  sys.assert([1,2] == [1, 2]);
  sys.assert([1, 2] != [1]);
  sys.assert([1, 2] != [1, 1]);

  sys.assert({} == {});
  sys.assert({} != {"a": "1", "b": "2"});
  sys.test({"a": "1", "b": "1" + "1"}, {"a": "1", "b": "11"});
  sys.assert({"a": "1", "b": "2"} != {"a": "1"});
  sys.assert({"a": "1", "b": "2"} != {"a": "1", "b": "1"});

/*
  try
    sys.throw ("test");
  catch (e)
    sys.println(e[:str.index(e, "\n  ")]);

  sys.println("here");
*/
};

fn();

