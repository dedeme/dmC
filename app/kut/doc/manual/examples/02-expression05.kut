s1a = "";
s1b = '';
sys.assert(s1a == s1b);
// Bytes
sys.assert(str.len(s1a) == 0);
// Runes
sys.println(str.toRunes(s1a)); // Shows: []
sys.assert(arr.size(str.toRunes(s1a)) == 0);

s2a = "ab€c\"'\u00f7n\nLine 2";
s2b = 'ab€c"\'\u00f7n\nLine 2';
sys.assert(s2a == s2b);
// Bytes
sys.println(s2a); // Shows: ab€c"'÷n
                  //        Line 2
sys.assert(str.len(s2a) == 18);
// Runes
sys.println(str.toRunes(s2a)); // Shows: ["a", "b", "€", "c", "\"", "'", "÷", "n", "\n", "L", "i", "n", "e", " ", "2"]
sys.assert(arr.size(str.toRunes(s2a)) == 15);

s3a = "xabcd";
// Bytes
sys.assert(s3a[1:4] == "abc");
sys.assert(s3a[4] == "d");
// Runes
sys.assert(str.fromRunes(str.toRunes(s3a)[1:4]) == "abc");
sys.assert(str.fromRunes([str.toRunes(s3a)[4]]) == "d");

s3b = "x€abcd";
// Bytes
sys.assert(s3b[1:4] == "€");
sys.assert(s3b[5] == "b");
sys.test(bytes.toArr(bytes.fromStr(s3b[1])), [226]);
// Runes
sys.assert(str.fromRunes(str.toRunes(s3b)[1:4]) == "€ab");
sys.assert(str.fromRunes(str.toRunes(s3b)[3:4]) == "b");
sys.assert(str.fromRunes([str.toRunes(s3b)[3]]) == "b");
sys.assert(str.fromRunes([str.toRunes(s3b)[1]]) == "€");

s4a = """
  a\b1"2"3
  b""";
s4b = "a\\b1\"2\"3\nb";
sys.println(s4a); // Shows: a\b1"2"3
                  //        b
sys.assert(s4a == s4b);

s5a = """a
  b""";
s5b = """
a
  b""";
s5c = "a\n  b";
sys.println(s5a); // Shows: a
                  //          b

sys.assert(s5a == s5b);
sys.assert(s5a == s5c);

s6a = """
  a
b""";
s6b = "  a\nb";
sys.println(s6a); // Shows:   a
                  //        b
sys.assert(s6a == s6b);

s7a = """
  a
  b
""";
sys.println(s7a); // Shows: a
                  //        b
s7b = "a\nb\n";
sys.assert(s7a == s7b);
