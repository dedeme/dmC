=
title = Comienzo
=

(Archivos _main.h_ y _main.c_)

## Línea de comando.

Kut puede ser llamado de las siguientes formas:

# <code>kut -v</code>

Muestra la versión del programa.

Ejemplo:

``bash
  kut -v``

# <code>kut -c &lt;archivo></code>

Comprueba la sintaxis de _archivo_.

Ejemplo:

``bash
  kut -c myprogr``

# <code>kut &lt;archivo> [argumentos]</code>

Ejecuta un _archivo_ '.kut' con argumentos opcionales.

_archivo_ va sin extensión.

Ejemplos:

``bash
  kut myprogr
  kut myprogr arg1 arg2``


## Inicialización.

# Señal SIGFPE

Se redirecciona la señal de error matemático para generar un mensaje antes
de finalizar el programa.

# Recolector de basura.

Se inicializa el recolector de basura.

# Sistema.

* Establece el lenguaje a 'C'.

* Prepara el generador de números aleatorios.

* Prepara el sistema de _threads_.

# Índice de archivos con código.

Se inicializa el objeto [80-objetos.html#fileix](fileix) y se establece el valor
del path relativo del archivo _.kut_ que está siendo procesado.

# Índice de símbolos.

Se inicializa el objeto [80-objetos.html#symix](symix) añadiendo las palabras
reservadas y los nombres de las librerías básicas (_built-in_).

# Índice de modulos.

Se inicializa la [80-objetos.html#módulos](lista de módulos) creando una lista
vacía.

## Comprobación - ejecución.

Esta acción se ejecuta dentro de bloque *TRY*, que, en caso de excepción,
imprime el mensaje de la misma.

Primeramente se lee y registra el módulo correspondiente al archivo principal
y después, dependiendo de la opción *-c* de la línea de comando, se pasa a la
comprobación o a la ejecución.

# Lectura.

Se hace creando un nuevo lector lector de bajo nivel
([03-lector1.html#Clase <code>Cdr</code>](Cdr)) e iniciando un proceso
[04-lector2.html#Lector de bloque principal](lectura de bloque principal).

# Comprobación.

1. Se leen todos los módulos del programa y se registran.

2. Se comprueba cada módulo con [06-comprobador.html](el comprobador) (*checker*).

# Ejecución.

Se ejecuta el código del módulo pricipal con el [05-ejecutor.html](el ejecutor) (*runner*).
La lectura y ejecución de los demás módulos se va realizando conforme el
programa se ejecuta.

La expresión devuelta por esta función es descartada salvo que sea un _break_ o
un _continue_, en cuyo caso se lanza un excepción.

